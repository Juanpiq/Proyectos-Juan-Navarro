// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PTJuanNavarro.Models;

#nullable disable

namespace PTJuanNavarro.Migrations
{
    [DbContext(typeof(SegurosContext))]
    [Migration("20240730064146_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PTJuanNavarro.Models.Administradore", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("apellido");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__Administ__3213E83F344ED028");

                    b.HasIndex(new[] { "Email" }, "UQ__Administ__AB6E61647F741D80")
                        .IsUnique();

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Año")
                        .HasColumnType("int")
                        .HasColumnName("año");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<string>("Cobertura")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("cobertura");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("costo");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("modelo");

                    b.Property<string>("TipoSeguro")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipo_seguro");

                    b.HasKey("Id")
                        .HasName("PK__Carros__3213E83FFFE81C6B");

                    b.HasIndex("ClienteId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("apellido");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefono");

                    b.HasKey("Id")
                        .HasName("PK__Clientes__3213E83F00241ED7");

                    b.HasIndex(new[] { "Email" }, "UQ__Clientes__AB6E6164707A65A8")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.ContraseñasAdministradore", b =>
                {
                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hash");

                    b.Property<string>("Salting")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("salting");

                    b.HasKey("NombreUsuario")
                        .HasName("PK__Contrase__D4D22D758B563E6E");

                    b.HasIndex(new[] { "NombreUsuario" }, "UQ__Contrase__D4D22D7490E7D8D6")
                        .IsUnique();

                    b.ToTable("ContraseñasAdministradores");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.ContraseñasCliente", b =>
                {
                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("hash");

                    b.Property<string>("Salting")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("salting");

                    b.HasKey("NombreUsuario")
                        .HasName("PK__Contrase__D4D22D75B59B915C");

                    b.HasIndex(new[] { "NombreUsuario" }, "UQ__Contrase__D4D22D748BC0F712")
                        .IsUnique();

                    b.ToTable("ContraseñasClientes");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Cotizacione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarroId")
                        .HasColumnType("int")
                        .HasColumnName("carro_id");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<DateOnly>("FechaCotizacion")
                        .HasColumnType("date")
                        .HasColumnName("fecha_cotizacion");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.HasKey("Id")
                        .HasName("PK__Cotizaci__3213E83F1F296336");

                    b.HasIndex("CarroId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Cotizaciones");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("tipo_usuario");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__3213E83F431B08BC");

                    b.HasIndex(new[] { "NombreUsuario" }, "UQ__Usuarios__D4D22D74C9DFDBDF")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Administradore", b =>
                {
                    b.HasOne("PTJuanNavarro.Models.Usuario", "IdNavigation")
                        .WithOne("Administradore")
                        .HasForeignKey("PTJuanNavarro.Models.Administradore", "Id")
                        .IsRequired()
                        .HasConstraintName("FK__Administrado__id__3F466844");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Carro", b =>
                {
                    b.HasOne("PTJuanNavarro.Models.Cliente", "Cliente")
                        .WithMany("Carros")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_Carros_Clientes");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Cliente", b =>
                {
                    b.HasOne("PTJuanNavarro.Models.Usuario", "IdNavigation")
                        .WithOne("Cliente")
                        .HasForeignKey("PTJuanNavarro.Models.Cliente", "Id")
                        .IsRequired()
                        .HasConstraintName("FK_Cotizaciones_Usuarios");

                    b.Navigation("IdNavigation");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.ContraseñasAdministradore", b =>
                {
                    b.HasOne("PTJuanNavarro.Models.Usuario", "NombreUsuarioNavigation")
                        .WithOne("ContraseñasAdministradore")
                        .HasForeignKey("PTJuanNavarro.Models.ContraseñasAdministradore", "NombreUsuario")
                        .HasPrincipalKey("PTJuanNavarro.Models.Usuario", "NombreUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Contraseñ__nombr__4E88ABD4");

                    b.Navigation("NombreUsuarioNavigation");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.ContraseñasCliente", b =>
                {
                    b.HasOne("PTJuanNavarro.Models.Usuario", "NombreUsuarioNavigation")
                        .WithOne("ContraseñasCliente")
                        .HasForeignKey("PTJuanNavarro.Models.ContraseñasCliente", "NombreUsuario")
                        .HasPrincipalKey("PTJuanNavarro.Models.Usuario", "NombreUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Contraseñ__nombr__4AB81AF0");

                    b.Navigation("NombreUsuarioNavigation");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Cotizacione", b =>
                {
                    b.HasOne("PTJuanNavarro.Models.Carro", "Carro")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("CarroId")
                        .HasConstraintName("FK_Cotizaciones_Carros");

                    b.HasOne("PTJuanNavarro.Models.Cliente", "Cliente")
                        .WithMany("Cotizaciones")
                        .HasForeignKey("ClienteId")
                        .HasConstraintName("FK_Cotizaciones_Clientes");

                    b.Navigation("Carro");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Carro", b =>
                {
                    b.Navigation("Cotizaciones");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Cliente", b =>
                {
                    b.Navigation("Carros");

                    b.Navigation("Cotizaciones");
                });

            modelBuilder.Entity("PTJuanNavarro.Models.Usuario", b =>
                {
                    b.Navigation("Administradore");

                    b.Navigation("Cliente");

                    b.Navigation("ContraseñasAdministradore");

                    b.Navigation("ContraseñasCliente");
                });
#pragma warning restore 612, 618
        }
    }
}
